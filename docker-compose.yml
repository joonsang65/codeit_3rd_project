# docker-compose.yml
version: '3.11-slim' 

services:
  backend:
    build:
      context: ./backend # Path to your backend Dockerfile
      dockerfile: Dockerfile
    container_name: my-web-backend # Keep your preferred container name
    # If you have an NVIDIA GPU and want to use it for ML models:
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all # or specify count: 1
              capabilities: [gpu]
    ports:
      - "8000:8000" # Map container port 8000 to host port 8000
    environment:
      # Load environment variables from a root .env file
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      STATIC_ROOT_DIR: /app/static # Ensure your FastAPI app knows where static files are
    volumes:
      # Mount your local backend code for live reloading
      - ./backend:/app
      # Persistent volume for generated images and temp session images (good to keep persistent)
      - generated_images_data:/app/static/generated_images
      - temp_session_images_data:/app/static/temp_session_images
      # Persistent volume for ML model caches (prevents re-downloading)
      - model_cache:/root/.cache
      # Persistent volume for downloaded fonts (if downloaded at runtime)
      - downloaded_fonts:/app/services/image_modules/TI_modules/downloaded_fonts
    command: uvicorn app.main:app --host 0.0.0.0 --reload # Use --reload for dev convenience

  frontend:
    build:
      context: ./frontend # Path to your frontend Dockerfile
      dockerfile: Dockerfile
    container_name: my-web-frontend # Keep your preferred container name
    ports:
      - "3000:3000" # Map container port 3000 to host port 3000
    volumes:
      # Mount your local frontend code for live reloading
      - ./frontend:/app
      # Ensure node_modules is not mounted from host to avoid permission issues
      # If you encounter issues, uncomment the line below to use a named volume for node_modules
      # - /app/node_modules
    environment:
      # Pass REACT_APP_API_BASE_URL to the frontend dev server at runtime.
      # CRA dev server typically picks these up.
      REACT_APP_API_BASE_URL: http://backend:8000
    depends_on:
      - backend # Ensure backend starts first
    command: npm start # Use the development server for hot-reloading

# Define named volumes for persistence
volumes:
  generated_images_data:
  temp_session_images_data:
  model_cache:
  downloaded_fonts: